# Generated by Django 3.0.8 on 2020-08-07 11:30

import ckeditor.fields
import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import school.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course_category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.TextField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the sender', max_length=200)),
                ('email', models.EmailField(max_length=200)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a book genre (e.g. Science Fiction)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Novel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('summary', ckeditor.fields.RichTextField()),
                ('isbn', models.CharField(blank=True, help_text='13 Character <a href="https://www.isbn-international.org/content/what-isbn"> ISBN number </a>', max_length=13, null=True)),
                ('bookFile', models.FileField(upload_to='book_files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'epub']), school.models.valid_pdf_mimetype, school.models.valid_size])),
                ('date_uploaded', models.DateTimeField(default=django.utils.timezone.now)),
                ('bookImage', models.ImageField(default='default_profile.jpg', upload_to='book/images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg']), school.models.valid_image_mimetype, school.models.valid_size])),
            ],
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default_profile.jpg', upload_to='book/tutors/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg']), school.models.valid_image_mimetype, school.models.valid_size])),
                ('instagram', models.CharField(max_length=30, null=True)),
                ('twitter', models.CharField(max_length=30, null=True)),
                ('github', models.CharField(max_length=30, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tutor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Select_course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sel', models.CharField(help_text='Write the topics you want to', max_length=200)),
                ('users', models.ManyToManyField(blank=True, related_name='registered_courses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authorName', models.CharField(max_length=200)),
                ('profile_image', models.ImageField(default='default_profile.jpg', upload_to='profile/images', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg']), school.models.valid_image_mimetype, school.models.valid_size])),
                ('about_me', models.TextField(blank=True, null=True)),
                ('favorite', models.ManyToManyField(blank=True, to='school.Novel')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='novel',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.Profile'),
        ),
        migrations.AddField(
            model_name='novel',
            name='created_author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='novel',
            name='genre',
            field=models.ManyToManyField(help_text='Select multiple genres for this book', to='school.Genre'),
        ),
        migrations.CreateModel(
            name='Course_Description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('premium', models.BooleanField(default=False)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('course_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.Course_category')),
                ('course_name', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='description', to='school.Select_course')),
                ('tutor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.Tutor')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('gender', models.CharField(blank=True, max_length=6, null=True)),
                ('Phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='INTERNATIONAL')),
                ('category1', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Email', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_name', to=settings.AUTH_USER_MODEL)),
                ('coursess', models.ManyToManyField(blank=True, related_name='course_sel', to='school.Course_category')),
            ],
        ),
        migrations.CreateModel(
            name='Cimage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_image', models.ImageField(upload_to='course/images', validators=[school.models.valid_size, django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'png', 'jpg']), school.models.valid_image_mimetype])),
                ('title', models.CharField(max_length=14)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='image', to='school.Select_course')),
            ],
        ),
    ]
